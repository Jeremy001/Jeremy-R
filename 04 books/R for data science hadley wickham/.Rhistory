ggplot(data = faithful, mapping = aes(x = eruptions)) +
geom_histogram(binwidth = 0.25,
color = 'white')
ggplot(diamonds, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = y),
binwidth = 0.5)
ggplot(data = diamonds, mapping = aes(x = y)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50))
str(diamonds)
diamonds %>%
filter(y <= 3 | y >= 30) %>%
select(price, x, y, z) %>%
arrange(y)
ggplot(data = diamonds, mapping = aes(x = x)) +
geom_histogram()
ggplot(data = diamonds, mapping = aes(x = y)) +
geom_histogram()
ggplot(data = diamonds, mapping = aes(x = z)) +
geom_histogram()
ggplot(data = diamonds, mapping = aes(x = z)) +
geom_histogram(binwidth = 0.5)
ggplot(data = diamonds, mapping = aes(x = y)) +
geom_histogram(binwidth = 0.5)
ggplot(data = diamonds, mapping = aes(x = x)) +
geom_histogram(binwidth = 0.5)
?diamonds
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram()
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 1000)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 100)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 10)
diamonds %>%
filter(price <= 10000) %>%
ggplot(mapping = aes(x = price)) +
geom_histogram(binwidth = 10)
diamonds %>%
filter(price <= 2500) %>%
ggplot(mapping = aes(x = price)) +
geom_histogram(binwidth = 10)
diamonds %>%
filter(price <= 10000) %>%
ggplot(mapping = aes(x = price)) +
geom_histogram(binwidth = 10)
diamonds %>%
filter(price <= 2500) %>%
ggplot(mapping = aes(x = price)) +
geom_histogram(binwidth = 10)
diamonds %>%
summarise(n_0.99 = sum(carat == 0.99, na.rm = TRUE),
n_0.99 = sum(carat == 1, na.rm = TRUE))
diamonds %>%
summarise(n_0.99 = sum(carat == 0.99, na.rm = TRUE),
n_1 = sum(carat == 1, na.rm = TRUE))
diamonds %>%
filter(carat < 1) %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram()
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram()
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram() +
coord_cartesian(ylim = c(0, 5000))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(ylim = c(0, 5000))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram() +
ylim(0, 5000)
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram() +
coord_cartesian(ylim = c(0, 5000))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram() +
ylim(0, 5000)
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
coord_cartesian(ylim = c(0, 5000))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
coord_cartesian(ylim = c(0, 1000))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
coord_cartesian(ylim = c(0, 500))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
ylim(0, 500)
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
coord_cartesian(xlim = c(0, 1))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
coord_cartesian(xlim = c(0.5, 1))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
coord_cartesian(xlim = c(0.5, 1.5))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
xlim(0.5, 1.5)
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
coord_cartesian(xlim = c(0.5, 1.5))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
coord_cartesian(ylim = c(0, 500))
diamonds %>%
ggplot(mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01) +
ylim(0, 500)
shiny::runApp('E:/0wlw/BI/shiny-bi/floatingfern')
diamonds %>%
filter(between(y, 3, 20))
diamonds %>%
mutate(y = ifelse(y < 3 | y > 20, NA, y))
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram()
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 10)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 10,
na.rm = TRUE)
str(flights)
flights %>%
mutate(cancelled = is.na(dep_time)) %>%
ggplot(mapping = aes(x = sched_dep_time)) +
geom_freqpoly(mapping = aes(color = cancelled))
flights %>%
mutate(cancelled = is.na(dep_time)) %>%
ggplot(mapping = aes(x = sched_dep_time)) +
geom_freqpoly(mapping = aes(color = cancelled),
binwidth = 1/4)
flights %>%
mutate(cancelled = is.na(dep_time)) %>%
ggplot(mapping = aes(x = sched_dep_time)) +
geom_freqpoly(mapping = aes(color = cancelled))
flights %>%
mutate(cancelled = is.na(dep_time),
sched_dep_hour = sched_dep_time %/% 100 +
sched_dep_time %% 100 / 60) %>%
ggplot(mapping = aes(x = sched_dep_hour)) +
geom_freqpoly(mapping = aes(color = cancelled))
flights %>%
mutate(cancelled = is.na(dep_time),
sched_dep_hour = sched_dep_time %/% 100 +
sched_dep_time %% 100 / 60) %>%
ggplot(mapping = aes(x = sched_dep_hour)) +
geom_freqpoly(mapping = aes(color = cancelled),
binwidth = 0.25)
flights %>%
mutate(cancelled = is.na(dep_time),
sched_dep_hour = sched_dep_time %/% 100 +
sched_dep_time %% 100 / 60) %>%
ggplot(mapping = aes(x = sched_dep_hour)) +
geom_freqpoly(mapping = aes(color = cancelled),
binwidth = 1/4)
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_histogram(binwidth = 10)
ggplot(data = diamonds, mapping = aes(x = cut)) +
geom_bar()
sum(is.na(cut))
sum(is.na(dep_delay))
sum(is.na(flights$dep_delay))
sum(is.na(diamonds$cut))
sum(is.na(diamonds$y))
str(flights)
sum(is.na(carries))
sum(is.na(flights$carrier))
sum(is.na(flights$origin))
sum(is.na(flights$dest))
ggplot(data = flights, mapping = aes(x = dep_delay)) +
geom_bar()
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(color = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = cut)) +
geom_bar()
ggplot(data = diamonds, mapping = aes(x = price, y = ..density..)) +
geom_freqpoly(mapping = aes(color = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg) +
geom_box(mapping = aes(x = reorder(class, hwy, FUN = median),
y = hwy))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median),
y = hwy))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median),
y = hwy)) +
coord_flip()
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, -hwy, FUN = median),
y = hwy)) +
coord_flip()
flights %>%
mutate(cancelled = is.na(dep_time),
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_minute = sched_dep_time %% 100,
sched_dep = sched_dep_hour + sched_dep_minute / 60) %>%
ggplot(mapping = aes(x = sched_dep, y = ..density..)) +
geom_freqpoly(mapping = aes(color = cancelled))
flights %>%
mutate(cancelled = is.na(dep_time),
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_minute = sched_dep_time %% 100,
sched_dep = sched_dep_hour + sched_dep_minute / 60) %>%
ggplot(mapping = aes(x = sched_dep, y = ..density..)) +
geom_freqpoly(mapping = aes(color = cancelled),
binwidth = 0.25)
flights %>%
mutate(cancelled = is.na(dep_time),
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_minute = sched_dep_time %% 100,
sched_dep = sched_dep_hour + sched_dep_minute / 60) %>%
ggplot(mapping = aes(x = sched_dep, y = ..density..)) +
geom_freqpoly(mapping = aes(color = cancelled),
binwidth = 0.5)
str(diamonds)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point()
ggplot(data = diamonds, mapping = aes(x = color, y = price)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = clarity, y = price)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = depth, y = price)) +
geom_point()
ggplot(data = diamonds, mapping = aes(x = table, y = price)) +
geom_point()
diamonds %>%
ggplot(mapping = aes(x = log(carat), y = price)) +
geom_point()
diamonds %>%
ggplot(mapping = aes(x = log(carat), y = log(price))) +
geom_point()
ggplot(data = diamonds, mapping = aes(x = cut, y = carat)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = reorder(cut, carat, FUN = median),
y = carat)) +
geom_boxplot()
library(ggstance)
?ggstance
??ggstance
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot() +
ggstance::geom_boxploth()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxploth()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot() +
geom_boxploth()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxploth()
ggplot(data = diamonds, mapping = aes(x = cut, y = price, fill = cut)) +
geom_boxploth()
ggplot(data = diamonds, mapping = aes(x = price, y = cut, fill = cut)) +
geom_boxploth()
ggplot(data = diamonds, mapping = aes(x = price, y = cut)) +
geom_boxploth()
ï¼Ÿgeom_lv
?geom_lv
??geom_lv
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_lv()
library(lvplot)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_lv()
p <- ggplot(mpg, aes(class, hwy))
p + geom_lv(aes(fill=..LV..)) + scale_fill_brewer()
p + geom_lv() + geom_jitter(width = 0.2)
p + geom_lv(alpha=1, aes(fill=..LV..)) + scale_fill_lv()
p + geom_lv()
p + geom_lv(varwidth = TRUE, aes(fill=..LV..)) + scale_fill_lv()
p + geom_lv(fill = "grey80", colour = "black")
p + geom_lv(outlier.colour = "red", outlier.shape = 1)
p + geom_lv(aes(fill = drv))
ggplot(ontime, aes(UniqueCarrier, TaxiIn + TaxiOut)) +
geom_lv(aes(fill = ..LV..), varwidth=TRUE) +
scale_fill_lv() +
scale_y_sqrt() +
theme_bw()
ontime$DayOfWeek <- as.POSIXlt(ontime$FlightDate)$wday
ggplot(ontime, aes(factor(DayOfWeek), TaxiIn + TaxiOut)) +
geom_lv(aes(fill = ..LV..)) +
scale_fill_lv() +
scale_y_sqrt() +
theme_bw()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_lv()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_violin()
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 1000) +
facet_wrap(~.cut)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 1000) +
facet_wrap(. ~ cut)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 1000) +
facet_grid(~cut)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 1000) +
facet_wrap(. ~ cut)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 1000) +
facet_wrap(~ cut)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_histogram(binwidth = 1000) +
facet_grid(. ~ cut)
?ggbeeswarn
?ggbeeswarm
library(ggbeeswarm)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_quasirandom()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_beeswarm()
ggplot(data = iris, mapping = aes(x = Species, y = Sepal.Length)) +
geom_jitter()
ggplot(data = iris, mapping = aes(x = Species, y = Sepal.Length)) +
geom_quasirandom()
ggplot(data = iris, mapping = aes(x = Species, y = Sepal.Length)) +
geom_beeswarm()
ggplot(data = diamonds, mapping = aes(x = cut, y = color)) +
geom_count()
ggplot(data = diamonds, mapping = aes(x = cut, y = color)) +
geom_count(fill = 'red')
ggplot(data = diamonds, mapping = aes(x = cut, y = color)) +
geom_count(mapping = aes(fill = 'red'))
ggplot(data = diamonds, mapping = aes(x = cut, y = color)) +
geom_count(mapping = aes(fill = I('red')))
ggplot(data = diamonds, mapping = aes(x = cut, y = color)) +
geom_count(mapping = aes(color = I('red')))
ggplot(data = diamonds, mapping = aes(x = cut, y = color)) +
geom_count(mapping = aes(color = 'red'))
ggplot(data = diamonds, mapping = aes(x = cut, y = color)) +
geom_count(color = 'red')
ggplot(data = diamonds, mapping = aes(x = cut, y = color)) +
geom_count(color = 'blue')
ggplot(data = diamonds, mapping = aes(x = cut, y = color)) +
geom_count()
diamonds %>%
count(cut, color)
diamonds %>%
count(cut, color) %>%
arrange(-n)
diamonds %>%
count(cut, color)
diamonds %>%
count(cut, color) %>%
ggplot(mapping = aes(x = cut, y = color)) +
geom_tile()
diamonds %>%
count(cut, color) %>%
ggplot(mapping = aes(x = cut, y = color)) +
geom_tile(mapping = aes(fill = n))
diamonds %>%
count(cut, color) %>%
ggplot(mapping = aes(x = cut, y = color)) +
geom_tile(mapping = aes(fill = -n))
diamonds %>%
count(cut, color) %>%
ggplot(mapping = aes(x = cut, y = color)) +
geom_tile(mapping = aes(fill = n))
?seriation
??seriation
flights %>%
group_by(dest, month) %>%
summarise(dep_delay_mean = mean(dep_delay)) %>%
ggplot(mapping = aes(x = month, y = dest)) +
geom_tile(mapping = aes(fill = dep_delay_mean))
??d3heatmap
library(d3heatmap)
d3heatmap(mpg)
d3heatmap(x = mpg)
x = mpg
x = mtcars
d3heatmap(x, k_row = 4, k_col = 2)
d3heatmap(x, k_row = 4, k_col = 2, scale = 'column')
head(x)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point()
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point(alpha = 0.2)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point(alpha = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point(alpha = 0.01)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_bin2d()
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_hex()
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(x = cut_width(carat, 0.1)))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
diamonds %>%
filter(carat < 3) %>%
ggplot(mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
diamonds %>%
filter(carat < 3) %>%
ggplot(mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)),
varwidth = TRUE)
diamonds %>%
filter(carat < 3) %>%
ggplot(mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_number(carat, 020)))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_freqpoly(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = diamonds, mapping = aes(y = price)) +
geom_freqpoly(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = diamonds, mapping = aes(x = price, group = cut_width(carat, 0.1))) +
geom_freqpoly()
ggplot(data = diamonds, mapping = aes(x = price, color = cut_width(carat, 0.1))) +
geom_freqpoly()
ggplot(data = diamonds, mapping = aes(x = price, color = cut_width(carat, 0.5))) +
geom_freqpoly()
ggplot(data = diamonds, mapping = aes(x = price,
y = ..density..,
color = cut_width(carat, 0.5))) +
geom_freqpoly()
ggplot(data = diamonds,
mapping = aes(x = carat,
color = cut_width(price, 5000))) +
geom_freqpoly()
ggplot(data = diamonds,
mapping = aes(x = carat,
y = ..density..,
color = cut_width(price, 5000))) +
geom_freqpoly()
ggplot(data = diamonds,
mapping = aes(x = cut_width(price, 5000),
y = carat)) +
geom_boxplot()
ggplot(data = diamonds,
mapping = aes(x = cut_width(price, 5000),
y = carat)) +
geom_boxplot() +
coord_flip()
?diamonds
str(faithful)
ggplot(faithful, aes(x = waiting, y = eruptions)) +
geom_point()
library(modelr)
mod <- lm(log(price) ~ log(carat), data = diamonds)
mod
mod$coefficients
mod$residuals
head(mod$residuals)
mean(mod$residuals)
diamonds2 <- diamonds %>%
add_residuals(mod)
head(diamonds2)
View(diamonds2)
diamonds2 <- diamonds %>%
add_residuals(mod) %>%
mutate(resid = exp(resid))
mean(diamonds2$resid)
ggplot(diamonds2, aes(carat, resid)) +
geom_point()
ggplot(diamonds2, aes(cut, resid)) +
geom_boxplot()
diamonds %>%
count(cut, clarity) %>%
ggplot(aes(cut, clarity, fill = n)) +
geom_tile()
x <- c(3, 2, 6, 7, 9)
y <- c(6.1, 3.9, 11.8, 14.2, 20)
lm(y ~ x)
model <- lm(y ~ x)
model$residuals
mean(model$residuals)
var(model$residuals)
sd(model$residuals)
test <- data.frame(x = x, y = y)
test
model <- lm(y ~ x, data = test)
model$residuals
mean(model$residuals)
var(model$residuals)
sd(model$residuals)
test$resid = model$residuals
test
