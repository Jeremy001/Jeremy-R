shiny::runApp('E:/0wlw/BI/shiny-bi/floatingfern')
install_pkg <- function(pkg){
# 从列出的包中筛选出还未安装的包
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
# 如果有未安装的包，则安装该包和其依赖包
if(length(new.pkg)) install.packages(new.pkg, dependencies = TRUE)
# 加载列出的所有包
sapply(pkg, library, character.only = TRUE)
}
pkg <- c("ggplot2", "RJDBC", "recharts", "dplyr", "shiny", "shinydashboard", "DT",
"leaflet", "sqldf", "tidyr", "highcharter", "reshape2", "xts", "lubridate",
"jsonlite", "networkD3")
install_pkg(pkg)
drv <-JDBC("oracle.jdbc.driver.OracleDriver",
"E:/R/ojdbc6.jar",
identifier.quote="`")
conn_b2btest_151 <-dbConnect(drv,
"jdbc:oracle:thin:@117.121.48.147:1521/bjdb01",
"b2btest",
"inet21")
runApp('E:/0wlw/BI/shiny-bi/floatingfern')
?min_rank
# 将当前文件所在的路径设置为工作目录
library('rstudioapi')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# 加载包
library(tidyverse)
library(nycflights13)
data(flights)
y <- c(1, 2, 2, NA, 3, 4)
min_rank(y)  # 升序，最小值排第一, NA值不参与排名, 相同值排相同名次
min_rank(desc(y))  # 降序
y[min_rank(desc(y)) < 3]
flights[min_rank(desc(flights$arr_delay)) < 10]
flights[min_rank(desc(flights$arr_delay)) < 10, "arr_time"]
arrange(flights, arr_delay)
flights %>%
select(tailnum, arr_delay) %>%
mutate(arr_top = min_rank(desc(arr_delay))) %>%
filter(arr_top <=10)
flights %>%
select(tailnum, arr_delay) %>%
arrange(-arr_delay)
flights %>%
select(tailnum, arr_delay) %>%
arrange(-arr_delay) %>%
mutate(arr_top = min_rank(desc(arr_delay))) %>%
filter(arr_top <=10)
summarise(flights, delay = mean(arr_delay, na.rm = TRUE))
summarise(flights,
dep_delay = mean(dep_delay, na.rm = TRUE),
arr_delay = mean(arr_delay, na.rm = TRUE))
table(flights$year)
by_month <- groug_by(flights, year, month)
by_month <- group_by(flights, year, month)
summarise(by_month, delay = mean(dep_delay, na.rm = TRUE))
str(flights)
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
distance = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE))
str(delay)
delay
delay <- filter(delay, count > 20, dest != 'HNL')
delay
delay <- arrange(delay, distance, delay)
delay
View(delay)
ggplot(data = delay, mapping = aes(x = distance, y = delay)) +
geom_point() +
geom_smooth()
ggplot(data = delay, mapping = aes(x = distance, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth()
ggplot(data = delay, mapping = aes(x = distance, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
ggplot(date = flights, mapping = aes(x = distance, y = arr_delay)) +
geom_point()
ggplot(data = flights, mapping = aes(x = distance, y = arr_delay)) +
geom_point()
ggplot(data = flights, mapping = aes(x = distance, y = arr_delay)) +
geom_point(alpha = 1/5, position = 'jitter')
flights %>%
group_by(dest) %>%
summarise(count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20,
dest != 'HNL')
flights %>%
group_by(dest) %>%
summarise(count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20,
dest != 'HNL') %>%
ggplot(mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count),
alpha = 1/3) +
geom_smooth(se = FALSE)
flights %>%
group_by(year, month) %>%
summarise(delay = mean(dep_delay))
not_cancelled_flights <- flights %>%
filter(!is.na(dep_delay),
!is.na(arr_delay))
not_cancelled_flights %>%
group_by(dest) %>%
summarise(dist = mean(distance),
delay = mean(arr_delay))
not_cancelled_flights %>%
group_by(year, month) %>%
summarise(count = n(),
dist = mean(distance),
delay = mean(arr_delay))
not_cancelled_flights %>%
group_by(tailnum) %>%
summarise(delay = mean(arr_delay)) %>%
ggplot(mapping(x = delay)) +
geom_freqpoly()
not_cancelled_flights %>%
group_by(tailnum) %>%
summarise(delay = mean(arr_delay)) %>%
ggplot(mapping = aes(x = delay)) +
geom_freqpoly()
not_cancelled_flights %>%
group_by(tailnum) %>%
summarise(delay = mean(arr_delay)) %>%
ggplot(mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
not_cancelled_flights %>%
group_by(tailnum) %>%
summarise(n = n(),
delay = mean(arr_delay)) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/5)
not_cancelled_flights %>%
group_by(tailnum) %>%
summarise(n = n(),
delay = mean(arr_delay)) %>%
filter(n > 25) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/5)
not_cancelled_flights %>%
group_by(tailnum) %>%
summarise(n = n(),
delay = mean(arr_delay)) %>%
filter(n > 25) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/5)
not_cancelled_flights %>%
group_by(tailnum) %>%
summarise(n = n(),
delay = mean(arr_delay)) %>%
filter(n > 25) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/5)
not_cancelled_flights %>%
group_by(tailnum) %>%
summarise(n = n(),
delay = mean(arr_delay)) %>%
filter(n > 30) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/5)
batting <- as_tibble(Lahman::Batting)
batting
batting %>%
group_by(playerID) %>%
summarise(ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)) %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point(alpha = 1/5)
batting %>%
group_by(playerID) %>%
summarise(ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)) %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() %>%
geom_smooth(se = FALSE)
batting %>%
group_by(playerID) %>%
summarise(ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)) %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
write.table('/n销售', file = 'test.txt', append = TRUE)
write.table('/n销售', file = '/test.txt', append = TRUE)
write.table('销售', file = '/test.txt', append = TRUE)
library('rstudioapi')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
write.table('销售', file = '/test.txt', append = TRUE)
x = data.frame(x = '销售')
write.table(x, file = '/test.txt', append = TRUE)
getwd()
write.table(x, file = '/test.txt', header = FALSE,append = TRUE)
？write.table
?write.table
write.table(x, file = 'test.txt', append = TRUE)
write.table('x', file = 'test.txt', append = TRUE)
write.table('x', file = 'test.txt', append = TRUE, col.names = FALSE)
write.table('x', file = 'test.txt', append = TRUE, col.names = FALSE)
write.table('x', file = 'test.txt', append = TRUE, col.names = FALSE, row.names = TRUE)
write.table('x', file = 'test.txt', append = TRUE, col.names = FALSE, row.names = TRUE)
write.table('x', file = 'test.txt', append = TRUE, col.names = FALSE, row.names = FALSE)
write.table('x',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('x',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('x',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('x',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE)
write.table('x',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = 'test.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = '四川大学机器智能实验室停用词库.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = '四川大学机器智能实验室停用词库.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
write.table('销售',
file = '四川大学机器智能实验室停用词库.txt',
quote = FALSE,
eol = '\n',
append = TRUE,
col.names = FALSE,
row.names = FALSE)
not_cancelled_flights %>%
group_by(year, month) %>%
summarise(delay_mean = mean(arr_delay),
delay_median = median(arr_delay))
not_cancelled_flights %>%
group_by(year, month) %>%
summarise(delay_avg1 = mean(arr_delay),
delay_avg2 = mean(arr_delay[arr_delay > 0]))
not_cancelled_flights %>%
group_by(year, month) %>%
summarise(delay_sd = sd(arr_delay),
delay_IQR = IQR(arr_delay),
delay_mad = mad(arr_delay))
?IQR
？mad
?mad
x <- c(1, 2, 3, 4, 5)
mad(x)
median(x)
mean(x)
x <- c(1, 2, 3, 4)
mad(x)
