class(x)
class(rnorm(10))
hcspark(x)
hcspark(x, 'column')
hcspark(c(1, 4, 5, 2, 9), 'pie')
hcspark(x, type = 'area')
mpgman <- mpg %>%
group_by(manufacturer) %>%
summarise(n = n(),
unique = length(unique(model))) %>%
arrange(-n, -unique)
hchart(mpgman, 'treemap', hcaes(x = manufacturer, value = n, color = unique))
library('viridis')
library(treemap)
data("GNI2014")
head(GNI2014)
dim(GNI2014)
viridis(6)
?viridis
rev(viridis(6))
tm <- treemap(GNI2014,
index = c('continent', 'iso3'),
vSize = 'population',
vColor = 'GNI',
type = 'comp',
palette = rev(viridis(6)),
draw = FALSE)
hctreemap(tm,
allowDrillToNode = TRUE,
layoutAlgorithm = 'squarified')
tm <- treemap(GNI2014,
index = c('continent', 'iso3'),
vSize = 'population',
vColor = 'GNI',
type = 'comp',
draw = FALSE)
hctreemap(tm,
allowDrillToNode = TRUE,
layoutAlgorithm = 'squarified') %>%
hc_title(text = 'Gross National Income World Data') %>%
hc_tooltip(pointFormat = "<b>{point.name}</b>:<br>
Pop:{point.value:,.0f}<br>
GNI:{point.valuecolor:,.0f}")
tm <- treemap(GNI2014,
index = c('continent', 'iso3'),
vSize = 'population',
vColor = 'GNI',
type = 'comp',
palette = rev(viridis(6)),
draw = FALSE)
hctreemap(tm,
allowDrillToNode = TRUE,
layoutAlgorithm = 'squarified') %>%
hc_title(text = 'Gross National Income World Data') %>%
hc_tooltip(pointFormat = "<b>{point.name}</b>:<br>
Pop:{point.value:,.0f}<br>
GNI:{point.valuecolor:,.0f}")
head(GNI2014)
hctreemap(tm,
allowDrillToNode = TRUE,
layoutAlgorithm = 'squarified') %>%
hc_title(text = 'Gross National Income World Data') %>%
hc_tooltip(pointFormat = "<b>{point.name}</b>:<br>
Pop:{point.value}<br>
GNI:{point.valuecolor:,.0f}")
head(mpgman)
hcts(c(1, 5, 2, 10, 5, 20))
head(economics_long)
head(economics)
highchart() %>%
hc_add_series(data = abs(rnorm(5)), type = 'column')
highchart() %>%
hc_add_series(data = abs(rnorm(5)), type = 'column') %>%
hc_add_series(data = purrr::map(0:4, function(x)list(x, x)), type = 'scatter', color = 'blue')
highchart() %>%
hc_add_series(data = abs(rnorm(5)),
type = 'column',
color = 'orange') %>%
hc_add_series(data = purrr::map(0:4, function(x)list(x, x)),
type = 'scatter',
color = 'blue')
?purrr
??purrr
library(purrr)
methods(purrr)
methods(package = 'purrr')
?map
1:10 %>%
map(rnorm, n = 10) %>%
map_dbl(mean)
map(rnorm, n = 10)
purrr::map(0:4, function(x)list(x, x))
dim(purrr::map(0:4, function(x)list(x, x)))
highchart() %>%
hc_add_series_boxplot(iris$Sepal.Length, iris$Species)
hcboxplot(iris$Sepal.Length, iris$Species)
highchart() %>%
hc_add_series_boxplot(iris$Sepal.Length, iris$Species) %>%
hc_add_theme(hc_theme_flat())
# load packages ------------------------------------------------------
library(dplyr)
library(tidyr)
library(highcharter)
library(broom)
library(forecast)
library(ggplot2)
library(quantmod)
library(treemap)
library(viridis)
library('quantmod')
getSymbols('GOOG')
class(GOOG)
head(GOOG)
chartSeries(getSymbols("GOOG", from = '2017-01-01'))
chartSeries(GOOG)
addMACD()
addBBands()
chartSeries(GOOG, multi.col = TRUE, theme = 'white')
chartSeries(GOOG, multi.col = TRUE, theme = 'white', TA = 'addMACD(); addBBands()')
n <- 50
df <- data.frame(
x = rnorm(n),
y = x * 2 + rnorm(n),
w = x^2
)
df <- data.frame(
x = rnorm(n),
y = x * 2 + rnorm(n),
w = x^2
)
df <- data_frame(
x = rnorm(n),
y = x * 2 + rnorm(n),
w = x^2
)
df
hc_add_series_df(highchart(),
data = df,
type = 'point',
x = x,
y = y)
x <- getSymbols('GOOG', auto.assign = FALSE)
y <- getSymbols('AMZN', auto.assign = FALSE)
highchart(type = 'stock') %>%
hc_add_series(x) %>%
hc_add_series(y, type = 'ohlc')
highchart(type = 'stock') %>%
hc_add_series(x)
head(x)
usdjpy <- getSymbols("USD/JPY", src="oanda", auto.assign = FALSE)
head(usdjpy)
dates <- as.Date(c("2016-05-08", "2016-09-12"), format = "%Y-%m-%d")
highchart(type = "stock") %>%
hc_add_series_xts(usdjpy, id = "usdjpy") %>%
hc_add_series_flags(dates,
title = c("E1", "E2"),
text = c("This is event 1", "This is the event 2"),
id = "usdjpy")
highchart(type = 'stock') %>%
hc_add_theme(hc_theme_monokai()) %>%
hc_yAxis_multiples(create_yaxis(naxis = 3,
sep = 0.05,
lineWidth = 1,
title = list(text = NULL))) %>%
hc_add_series_xts(day2[,1], name = 'amount') %>%
hc_add_series_xts(day2[,3], name = 'cust_num', yAxis = 1) %>%
hc_add_series_xts(day2[,4], name = 'mas_num', yAxis = 2)
hchart(airquality, 'line', hcaes(x = as.factor(Day), y = Temp, group = Month),
color = c("#e5b13a", "#4bd5ee", "#4AA942", "#FAFAFA", "#B71C1C")) %>%
hc_title(text = 'A <span style="color:#e5b13a">very good</span> case!', useHTML = TRUE) %>%
hc_tooltip(table = TRUE, sort = TRUE) %>%
hc_credits(enabled = FALSE) %>%
hc_add_theme(
hc_theme_flatdark(
chart = list(
backgroundColor = 'transparent',
divBackgroundImage = "http://www.wired.com/images_blogs/underwire/2013/02/xwing-bg.gif"
)
)
)
highchart() %>%
hc_title(text = "This is a bar graph describing my favorite pies
including a pie chart describing my favorite bars") %>%
hc_subtitle(text = "In percentage of tastiness and awesomeness") %>%
hc_add_series_labels_values(favorite_pies$pie, favorite_pies$percent, name = "Pie",
colorByPoint = TRUE, type = "column") %>%
hc_add_series_labels_values(favorite_bars$bar, favorite_bars$percent,
colors = substr(terrain.colors(5), 0 , 7), type = "pie",
name = "Bar", colorByPoint = TRUE, center = c('35%', '10%'),
size = 100, dataLabels = list(enabled = FALSE)) %>%
hc_yAxis(title = list(text = "percentage of tastiness"),
labels = list(format = "{value}%"), max = 100) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_legend(enabled = FALSE) %>%
hc_tooltip(pointFormat = "{point.y}%")
favorite_pies
substr(terrain.colors(5), 0 , 7)
terrain.colors(5)
including a pie chart describing my favorite bars") %>%
hc_subtitle(text = "In percentage of tastiness and awesomeness") %>%
hc_add_series_labels_values(favorite_pies$pie, favorite_pies$percent, name = "Pie",
colorByPoint = TRUE, type = "column") %>%
hc_add_series_labels_values(favorite_bars$bar, favorite_bars$percent,
colors = substr(terrain.colors(5), 0 , 7), type = "pie",
name = "Bar", colorByPoint = TRUE, center = c('35%', '50%'),
size = 100, dataLabels = list(enabled = FALSE)) %>%
hc_yAxis(title = list(text = "percentage of tastiness"),
labels = list(format = "{value}%"), max = 100) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_legend(enabled = FALSE) %>%
hc_tooltip(pointFormat = "{point.y}%")
highchart() %>%
hc_title(text = "This is a bar graph describing my favorite pies
including a pie chart describing my favorite bars") %>%
hc_subtitle(text = "In percentage of tastiness and awesomeness") %>%
hc_add_series_labels_values(favorite_pies$pie, favorite_pies$percent, name = "Pie",
colorByPoint = TRUE, type = "column") %>%
hc_add_series_labels_values(favorite_bars$bar, favorite_bars$percent,
colors = substr(terrain.colors(5), 0 , 7), type = "pie",
name = "Bar", colorByPoint = TRUE, center = c('35%', '50%'),
size = 100, dataLabels = list(enabled = FALSE)) %>%
hc_yAxis(title = list(text = "percentage of tastiness"),
labels = list(format = "{value}%"), max = 100) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_legend(enabled = FALSE) %>%
hc_tooltip(pointFormat = "{point.y}%")
highchart() %>%
hc_title(text = "This is a bar graph describing my favorite pies
including a pie chart describing my favorite bars") %>%
hc_subtitle(text = "In percentage of tastiness and awesomeness") %>%
hc_add_series_labels_values(favorite_pies$pie, favorite_pies$percent, name = "Pie",
colorByPoint = TRUE, type = "column") %>%
hc_add_series_labels_values(favorite_bars$bar, favorite_bars$percent,
colors = substr(terrain.colors(5), 0 , 7), type = "pie",
name = "Bar", colorByPoint = TRUE, center = c('50%', '10%'),
size = 100, dataLabels = list(enabled = FALSE)) %>%
hc_yAxis(title = list(text = "percentage of tastiness"),
labels = list(format = "{value}%"), max = 100) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_legend(enabled = FALSE) %>%
hc_tooltip(pointFormat = "{point.y}%")
highchart() %>%
hc_title(text = "This is a bar graph describing my favorite pies
including a pie chart describing my favorite bars") %>%
hc_subtitle(text = "In percentage of tastiness and awesomeness") %>%
hc_add_series_labels_values(favorite_pies$pie, favorite_pies$percent, name = "Pie",
colorByPoint = TRUE, type = "column") %>%
hc_add_series_labels_values(favorite_bars$bar, favorite_bars$percent,
colors = substr(terrain.colors(5), 0 , 7), type = "pie",
name = "Bar", colorByPoint = TRUE, center = c('50%', '10%'),
size = 300, dataLabels = list(enabled = FALSE)) %>%
hc_yAxis(title = list(text = "percentage of tastiness"),
labels = list(format = "{value}%"), max = 100) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_legend(enabled = FALSE) %>%
hc_tooltip(pointFormat = "{point.y}%")
highchart() %>%
hc_title(text = "This is a bar graph describing my favorite pies
including a pie chart describing my favorite bars") %>%
hc_subtitle(text = "In percentage of tastiness and awesomeness") %>%
hc_add_series_labels_values(favorite_pies$pie, favorite_pies$percent, name = "Pie",
colorByPoint = TRUE, type = "column") %>%
hc_add_series_labels_values(favorite_bars$bar, favorite_bars$percent,
colors = substr(terrain.colors(5), 0 , 7), type = "pie",
name = "Bar", colorByPoint = TRUE, center = c('35%', '10%'),
size = 100, dataLabels = list(enabled = FALSE)) %>%
hc_yAxis(title = list(text = "percentage of tastiness"),
labels = list(format = "{value}%"), max = 100) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_legend(enabled = FALSE) %>%
hc_tooltip(pointFormat = "{point.y}%")
highchart() %>%
hc_title(text = 'THIS IS TITLE') %>%
hc_subtitle(text = 'THIS IS SUBTITLE') %>%
hc_add_series_labels_values(favorite_pies$pie,
favorite_pies$percent,
name = 'pie',
colorByPoint = TRUE,
type = 'column')
highchart() %>%
hc_title(text = 'THIS IS TITLE') %>%
hc_subtitle(text = 'THIS IS SUBTITLE') %>%
hc_add_series_labels_values(favorite_pies$pie,
favorite_pies$percent,
name = 'pie',
colorByPoint = TRUE,
type = 'column') %>%
hc_xAxis(categories = favorite_pies$pie)
highchart() %>%
hc_title(text = 'THIS IS TITLE') %>%
hc_subtitle(text = 'THIS IS SUBTITLE') %>%
hc_add_series_labels_values(favorite_pies$pie,
favorite_pies$percent,
name = 'pie',
colorByPoint = TRUE,
type = 'column') %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_yAxis(text = list('percent'),
labels = list(format = '{value}%'),
max = 100)
highchart() %>%
hc_title(text = 'THIS IS TITLE') %>%
hc_subtitle(text = 'THIS IS SUBTITLE') %>%
hc_add_series_labels_values(favorite_pies$pie,
favorite_pies$percent,
name = 'pie',
colorByPoint = TRUE,
type = 'column') %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_yAxis(text = list('percent'),
labels = list(format = '{value}%'),
max = 100) %>%
hc_legend(enabled = FALSE)
highchart() %>%
hc_title(text = 'THIS IS TITLE') %>%
hc_subtitle(text = 'THIS IS SUBTITLE') %>%
hc_add_series_labels_values(favorite_pies$pie,
favorite_pies$percent,
name = 'pie',
colorByPoint = TRUE,
type = 'column') %>%
hc_add_series_labels_values(favorite_bars$bar,
favorite_bars$percent,
type = 'pie',
name = 'bar',
colorByPoint = TRUE,
center = c('35%', '10%'),
size = 100) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_yAxis(text = list('percent'),
labels = list(format = '{value}%'),
max = 100) %>%
hc_legend(enabled = FALSE)
highchart() %>%
hc_title(text = 'THIS IS TITLE') %>%
hc_subtitle(text = 'THIS IS SUBTITLE') %>%
hc_add_series_labels_values(favorite_pies$pie,
favorite_pies$percent,
name = 'pie',
colorByPoint = TRUE,
type = 'column') %>%
hc_add_series_labels_values(favorite_bars$bar,
favorite_bars$percent,
type = 'pie',
name = 'bar',
colorByPoint = TRUE,
center = c('35%', '10%'),
size = 100,
dataLabels = list(enabled = FALSE)) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_yAxis(text = list('percent'),
labels = list(format = '{value}%'),
max = 100) %>%
hc_legend(enabled = FALSE)
highchart() %>%
hc_title(text = 'THIS IS TITLE') %>%
hc_subtitle(text = 'THIS IS SUBTITLE') %>%
hc_add_series_labels_values(favorite_pies$pie,
favorite_pies$percent,
name = 'pie',
colorByPoint = TRUE,
type = 'column') %>%
hc_add_series_labels_values(favorite_bars$bar,
favorite_bars$percent,
type = 'pie',
name = 'bar',
colors = substr(terrian.colors(5), 0, 7),
colorByPoint = TRUE,
center = c('35%', '10%'),
size = 100,
dataLabels = list(enabled = FALSE)) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_yAxis(text = list('percent'),
labels = list(format = '{value}%'),
max = 100) %>%
hc_legend(enabled = FALSE) %>%
hc_tooltip(pointFormat = '{point.y}%')
highchart() %>%
hc_title(text = 'THIS IS TITLE') %>%
hc_subtitle(text = 'THIS IS SUBTITLE') %>%
hc_add_series_labels_values(favorite_pies$pie,
favorite_pies$percent,
name = 'pie',
colorByPoint = TRUE,
type = 'column') %>%
hc_add_series_labels_values(favorite_bars$bar,
favorite_bars$percent,
type = 'pie',
name = 'bar',
colors = substr(terrain.colors(5), 0, 7),
colorByPoint = TRUE,
center = c('35%', '10%'),
size = 100,
dataLabels = list(enabled = FALSE)) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_yAxis(text = list('percent'),
labels = list(format = '{value}%'),
max = 100) %>%
hc_legend(enabled = FALSE) %>%
hc_tooltip(pointFormat = '{point.y}%')
highchart() %>%
hc_title(text = 'THIS IS TITLE') %>%
hc_subtitle(text = 'THIS IS SUBTITLE') %>%
hc_add_series_labels_values(favorite_pies$pie,
favorite_pies$percent,
name = 'pie',
colorByPoint = TRUE,
type = 'column') %>%
hc_add_series_labels_values(favorite_bars$bar,
favorite_bars$percent,
type = 'pie',
name = 'bar',
colors = substr(terrain.colors(5), 0, 7),
colorByPoint = TRUE,
center = c('35%', '10%'),
size = 100,
dataLabels = list(enabled = FALSE)) %>%
hc_xAxis(categories = favorite_pies$pie) %>%
hc_yAxis(text = list('percent'),
labels = list(format = '{value}%'),
max = 100) %>%
hc_legend(enabled = FALSE) %>%
hc_tooltip(pointFormat = '{point.y}%') %>%
hc_add_theme(hc_theme_flat())
setwd('E:/R/Jeremy-R/03 data mining/random forest')
data <- read.csv('Cardiotocographic.csv', header = TRUE)
str(data)
data$NSP <- as.factor(data$NSP)
str(data)
table(data$NSP)
table(data$NSP)
set.seed(123)
ind <- sample(2, nrow(data), replace = TRUE, prob = c(0.7, 0.3))
head(ind)
train <- data[ind == 1,]
test <- data[ind == 2,]
library('randomForest')
set.seed(222)
rf <- randomForest(NSP ~ ., data = train)
print(rf)
attributes(rf)
rf$confusion
rf$
mtry
library('caret')
p1 <- predict(rf, data = train)
head(p1)
head(train$NSP)
table(train$NSP)
table(test$NSP)
confusionMatrix(p1, train$NSP)
p2 <- predict(rf, data = test)
confusionMatrix(p2, test$NSP)
p2 <- predict(rf, data = test)
head(p2)
dim(p2)
dim(text)
dim(test)
p2 <- predict(rf, test)
confusionMatrix(p2, test$NSP)
plot(rf)
tuneRF(train[, -22], train[, 22],
stepFactor = 0.5,
plot = TRUE,
ntreeTry = 300,
trace = TRUE,
improve = 0.05)
rf2 <- randomForest(NAP ~ ., data = train,
ntree = 300,
mtry = 8,
importance = TRUE,
proximity = TRUE)
rf2 <- randomForest(NSP ~ ., data = train,
ntree = 300,
mtry = 8,
importance = TRUE,
proximity = TRUE)
print(rf2)
p22 <- predict(rf2, test)
confusionMatrix(p22, test$NSP)
hist(treesize(rf),
main = 'no, of nodes for the Trees',
color = 'green')
hist(treesize(rf),
main = 'no, of nodes for the Trees',
col = 'green')
hist(treesize(r2),
main = 'no, of nodes for the Trees',
col = 'green')
hist(treesize(rf2),
main = 'no, of nodes for the Trees',
col = 'green')
varImpPlot(rf2)
varImpPlot(rf)
varImpPlot(rf2,
sort = TRUE,
n,var = 10,
main = 'TOP 10 variables importance')
varImpPlot(rf2,
sort = TRUE,
n.var = 10,
main = 'TOP 10 variables importance')
importance(rf)
importance(rf2)
varUsed(rf)
varUsed(rf2)
hist(data$ASTV)
partialPlot(rf2, train, ASTV, '1')
partialPlot(rf2, train, ASTV, '3')
partialPlot(rf2, train, ASTV, '2')
getTree(rf2, 1, labelVar = TRUE)
MDSplot(rf2, train$NSP)
